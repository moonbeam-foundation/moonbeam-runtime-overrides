name: Build

on:
  pull_request:
    types: [opened, edited, synchronize]

env:
  MOONBEAM_GIT_REF: "master"
  MOONBEAM_LAST_CLIENT_TAG: "v0.22.0"

jobs:
  list-spec-versions:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    outputs:
      spec_versions: ${{ steps.list-versions.outputs.spec_versions }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: List spec versions
        id: list-versions
        run: |
          INTEGER_REGEX='^[0-9]+$'
          cd tracing
          for D in *; do
              if [[ "${D}" =~ $INTEGER_REGEX ]] ; then
                if [ -d "${D}" ]; then
                  LIST="$LIST, \"$D\""
                fi
              fi
          done
          echo ::set-output name=spec_versions::[${LIST:2}]
          echo "spec_versions: [${LIST:2}]"

  ####### Check files and formatting #######

  check-copyright:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Find un-copyrighted files
        run: |
          find . -name '*.rs' -exec grep  -H -E -o -c Copyright {} \; | grep ':0' || true
          FILECOUNT=$(find . -name '*.rs' -exec grep  -H -E -o -c  'Copyright'  {} \; | grep -c ':0' || true)
          if [[ $FILECOUNT -eq 0 ]]; then
            true
          else
            false
          fi

  check-editorconfig:
    name: "Check editorconfig"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup editorconfig checker
        run: |
          ls /tmp/bin/ec-linux-amd64 || \
          cd /tmp && \
          wget https://github.com/editorconfig-checker/editorconfig-checker/releases/download/2.1.0/ec-linux-amd64.tar.gz && \
          tar xvf ec-linux-amd64.tar.gz && \
          chmod +x bin/ec-linux-amd64
      - name: Check files
        run: /tmp/bin/ec-linux-amd64

  ####### Check each tracing runtime independently #######

  check-tracing-runtime:
    name: "Check tracing runtime"
    if: github.event.pull_request.draft == false
    runs-on:
      labels: bare-metal
    needs: ["list-spec-versions"]
    strategy:
      matrix:
        spec_version: ${{ fromJson(needs.list-spec-versions.outputs.spec_versions) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            edited:
              - 'tracing/${{ matrix.spec_version }}/**'
            shared:
              - 'tracing/shared'
      - name: Format code with rustfmt
        if: steps.filter.outputs.edited == 'true' || steps.filter.outputs.shared == 'true'
        run: cd tracing/${{ matrix.spec_version }} && cargo fmt -- --check
      #- name: Build and run tests
      #  if: steps.filter.outputs.edited == 'true' || steps.filter.outputs.shared == 'true'
      #  run: cd tracing/${{ matrix.spec_version }} && cargo test --release --all
      - name: "Check wasm blob"
        if: steps.filter.outputs.edited == 'true' || steps.filter.outputs.shared == 'true'
        run: |
          ./scripts/check-tracing-runtime.sh ${{ matrix.spec_version }}

  test-last-tracing-runtime:
    name: "Test last tracing runtime"
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    needs: ["check-tracing-runtime"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Get moonbeam binary
        run: |
          ./scripts/get-moonbeam-binary.sh $MOONBEAM_LAST_CLIENT_TAG
      - name: "Setup node"
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: Copy tests folder
        run: |
          rm -rf tests tmp
          mkdir tests tmp
          git clone https://github.com/PureStake/moonbeam --depth 1 -b $MOONBEAM_GIT_REF tmp/moonbeam
          cp -r tmp/moonbeam/moonbeam-types-bundle .
          cp -r tmp/moonbeam/tests .
      - name: Typescript tracing tests (against dev service)
        continue-on-error: true
        env:
          ETHAPI_CMD: --ethapi=txpool,debug,trace
          FORCE_WASM_EXECUTION: true
          WASM_RUNTIME_OVERRIDES: moonbase-overrides
        run: ./scripts/test-last-tracing-runtime.sh
